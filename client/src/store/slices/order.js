import { createSlice } from "@reduxjs/toolkit";

const initialState = {
  shippingAddress: localStorage.getItem("shippingAddress")
    ? JSON.parse(localStorage.getItem("shippingAddress"))
    : null,
  paymentMethod: "PayPal",
  latestOrder: localStorage.getItem("latestOrder")
    ? JSON.parse(localStorage.getItem("latestOrder"))
    : null,
};

export const orderSlice = createSlice({
  name: "order",
  initialState,
  reducers: {
    // Reducer for saving the shipping address
    saveShippingAddress: (state, action) => {
      state.shippingAddress = action.payload;
      localStorage.setItem("shippingAddress", JSON.stringify(action.payload));
    },

    // Reducer for saving the payment method
    savePaymentMethod: (state, action) => {
      state.paymentMethod = action.payload;
      localStorage.setItem("paymentMethod", JSON.stringify(action.payload));
    },

    removeShippingAddress: (state) => {
      state.shippingAddress = null;
      localStorage.removeItem("shippingAddress");
    },

    addLatestOrder: (state, action) => {
      state.latestOrder = action.payload;
      localStorage.setItem("latestOrder", JSON.stringify(action.payload));
    },

    removeLatestOrder: (state) => {
      state.latestOrder = null;
      localStorage.removeItem("latestOrder");
    },
  },
});

// Extract the action creators from the cartSlice
export const {
  saveShippingAddress,
  savePaymentMethod,
  addLatestOrder,
  removeLatestOrder,
  removeShippingAddress,
} = orderSlice.actions;

// Export the reducer generated by the cartSlice
export default orderSlice.reducer;
